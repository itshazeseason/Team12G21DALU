module disp7seg #(
    DIV = 16 : DIV >= 0
  )(
    input clk,                // clock
    input rst,                // reset
    input digits [4][5],      // coded 7-Segment-Disp data 
    output seg [7],           // LED segments
    output sel [4]       // Digit select
  ) {

  sig segcode[5];
  
  counter ctr (.clk(clk), .rst(rst), #DIV(DIV), #SIZE(2), #TOP(3)); 
  decoder digit_dec (#WIDTH(2));           // digit decoder

    
  always {
    segcode = digits[ctr.value];              // select the digit to display
    
    case (segcode) {
      0: seg = 7b0111111;        //0  SEGC_0 SEGC_O
      1: seg = 7b0000110;        //1  SEGC_1
      2: seg = 7b1011011;        //2  SEGC_2
      3: seg = 7b1001111;        //3  SEGC_3
      4: seg = 7b1100110;        //4  SEGC_4
      5: seg = 7b1101101;        //5  SEGC_5 SEGC_S
      6: seg = 7b1111101;        //6  SEGC_6
      7: seg = 7b0000111;        //7  SEGC_7
      8: seg = 7b1111111;        //8  SEGC_8
      9: seg = 7b1100111;        //9  SEGC_9 SEGC_G_
      10: seg = 7b1110111;       //A  SEGC_A
      11: seg = 7b1111100;       //b  SEGC_B_
      12: seg = 7b0111001;       //C  SEGC_C
      13: seg = 7b1011110;       //d  SEGC_D_
      14: seg = 7b1111001;       //E  SEGC_E
      15: seg = 7b1110001;       //F  SEGC_F
      16: seg = 7b0000000;       //blank  SEGC_BK
      17: seg = 7b1011100;       //o  SEGC_O_
      18: seg = 7b1011000;       //c  SEGC_C_
      19: seg = 7b0011100;       //u  SEGC_U_
      20: seg = 7b1010100;       //n  SEGC_N_
      21: seg = 7b1010000;       //r  SEGC_R_
      22: seg = 7b1100111;       //q  SEGC_Q_
      23: seg = 7b1000000;       //dash  SEGC_DASH
      24: seg = 7b1110011;       //P  SEGC_P
      25: seg = 7b1110110;       //H  SEGC_H SEGC_X
      26: seg = 7b0111000;       //L  SEGC_L
      27: seg = 7b1110100;       //h  SEGC_H_
      28: seg = 7b1101110;       //y  SEGC_Y SEGC_Y_
      29: seg = 7b1111000;       //T  SEGC_T_
      30: seg = 7b1011111;       //a  SEGC_A_
      31: seg = 7b0001000;       //_  SEGC__
      default: seg = 7b0;
    }
    
    digit_dec.in = ctr.value;             // decode active digit to one-hot
    sel = digit_dec.out;                  // output the active digit
  }
}