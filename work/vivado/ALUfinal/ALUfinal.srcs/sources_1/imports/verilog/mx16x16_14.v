/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mx16x16_14 (
    input [15:0] a,
    input [15:0] b,
    output reg [15:0] out
  );
  
  
  
  integer i;
  
  reg [15:0] p;
  
  wire [(4'hf+0)-1:0] M_h_s;
  wire [(4'hf+0)-1:0] M_h_c;
  reg [(4'hf+0)-1:0] M_h_x;
  reg [(4'hf+0)-1:0] M_h_y;
  
  genvar GEN_h0;
  generate
  for (GEN_h0=0;GEN_h0<4'hf;GEN_h0=GEN_h0+1) begin: h_gen_0
    half_adder_16 h (
      .x(M_h_x[GEN_h0*(1)+(1)-1-:(1)]),
      .y(M_h_y[GEN_h0*(1)+(1)-1-:(1)]),
      .s(M_h_s[GEN_h0*(1)+(1)-1-:(1)]),
      .c(M_h_c[GEN_h0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(4'he+0)-1:0] M_l2_s;
  wire [(4'he+0)-1:0] M_l2_c;
  reg [(4'he+0)-1:0] M_l2_x;
  reg [(4'he+0)-1:0] M_l2_y;
  reg [(4'he+0)-1:0] M_l2_cin;
  
  genvar GEN_l20;
  generate
  for (GEN_l20=0;GEN_l20<4'he;GEN_l20=GEN_l20+1) begin: l2_gen_0
    full_adder_17 l2 (
      .x(M_l2_x[GEN_l20*(1)+(1)-1-:(1)]),
      .y(M_l2_y[GEN_l20*(1)+(1)-1-:(1)]),
      .cin(M_l2_cin[GEN_l20*(1)+(1)-1-:(1)]),
      .s(M_l2_s[GEN_l20*(1)+(1)-1-:(1)]),
      .c(M_l2_c[GEN_l20*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(4'hd+0)-1:0] M_l3_s;
  wire [(4'hd+0)-1:0] M_l3_c;
  reg [(4'hd+0)-1:0] M_l3_x;
  reg [(4'hd+0)-1:0] M_l3_y;
  reg [(4'hd+0)-1:0] M_l3_cin;
  
  genvar GEN_l30;
  generate
  for (GEN_l30=0;GEN_l30<4'hd;GEN_l30=GEN_l30+1) begin: l3_gen_0
    full_adder_17 l3 (
      .x(M_l3_x[GEN_l30*(1)+(1)-1-:(1)]),
      .y(M_l3_y[GEN_l30*(1)+(1)-1-:(1)]),
      .cin(M_l3_cin[GEN_l30*(1)+(1)-1-:(1)]),
      .s(M_l3_s[GEN_l30*(1)+(1)-1-:(1)]),
      .c(M_l3_c[GEN_l30*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(4'hc+0)-1:0] M_l4_s;
  wire [(4'hc+0)-1:0] M_l4_c;
  reg [(4'hc+0)-1:0] M_l4_x;
  reg [(4'hc+0)-1:0] M_l4_y;
  reg [(4'hc+0)-1:0] M_l4_cin;
  
  genvar GEN_l40;
  generate
  for (GEN_l40=0;GEN_l40<4'hc;GEN_l40=GEN_l40+1) begin: l4_gen_0
    full_adder_17 l4 (
      .x(M_l4_x[GEN_l40*(1)+(1)-1-:(1)]),
      .y(M_l4_y[GEN_l40*(1)+(1)-1-:(1)]),
      .cin(M_l4_cin[GEN_l40*(1)+(1)-1-:(1)]),
      .s(M_l4_s[GEN_l40*(1)+(1)-1-:(1)]),
      .c(M_l4_c[GEN_l40*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(4'hb+0)-1:0] M_l5_s;
  wire [(4'hb+0)-1:0] M_l5_c;
  reg [(4'hb+0)-1:0] M_l5_x;
  reg [(4'hb+0)-1:0] M_l5_y;
  reg [(4'hb+0)-1:0] M_l5_cin;
  
  genvar GEN_l50;
  generate
  for (GEN_l50=0;GEN_l50<4'hb;GEN_l50=GEN_l50+1) begin: l5_gen_0
    full_adder_17 l5 (
      .x(M_l5_x[GEN_l50*(1)+(1)-1-:(1)]),
      .y(M_l5_y[GEN_l50*(1)+(1)-1-:(1)]),
      .cin(M_l5_cin[GEN_l50*(1)+(1)-1-:(1)]),
      .s(M_l5_s[GEN_l50*(1)+(1)-1-:(1)]),
      .c(M_l5_c[GEN_l50*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(4'ha+0)-1:0] M_l6_s;
  wire [(4'ha+0)-1:0] M_l6_c;
  reg [(4'ha+0)-1:0] M_l6_x;
  reg [(4'ha+0)-1:0] M_l6_y;
  reg [(4'ha+0)-1:0] M_l6_cin;
  
  genvar GEN_l60;
  generate
  for (GEN_l60=0;GEN_l60<4'ha;GEN_l60=GEN_l60+1) begin: l6_gen_0
    full_adder_17 l6 (
      .x(M_l6_x[GEN_l60*(1)+(1)-1-:(1)]),
      .y(M_l6_y[GEN_l60*(1)+(1)-1-:(1)]),
      .cin(M_l6_cin[GEN_l60*(1)+(1)-1-:(1)]),
      .s(M_l6_s[GEN_l60*(1)+(1)-1-:(1)]),
      .c(M_l6_c[GEN_l60*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(4'h9+0)-1:0] M_l7_s;
  wire [(4'h9+0)-1:0] M_l7_c;
  reg [(4'h9+0)-1:0] M_l7_x;
  reg [(4'h9+0)-1:0] M_l7_y;
  reg [(4'h9+0)-1:0] M_l7_cin;
  
  genvar GEN_l70;
  generate
  for (GEN_l70=0;GEN_l70<4'h9;GEN_l70=GEN_l70+1) begin: l7_gen_0
    full_adder_17 l7 (
      .x(M_l7_x[GEN_l70*(1)+(1)-1-:(1)]),
      .y(M_l7_y[GEN_l70*(1)+(1)-1-:(1)]),
      .cin(M_l7_cin[GEN_l70*(1)+(1)-1-:(1)]),
      .s(M_l7_s[GEN_l70*(1)+(1)-1-:(1)]),
      .c(M_l7_c[GEN_l70*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(4'h8+0)-1:0] M_l8_s;
  wire [(4'h8+0)-1:0] M_l8_c;
  reg [(4'h8+0)-1:0] M_l8_x;
  reg [(4'h8+0)-1:0] M_l8_y;
  reg [(4'h8+0)-1:0] M_l8_cin;
  
  genvar GEN_l80;
  generate
  for (GEN_l80=0;GEN_l80<4'h8;GEN_l80=GEN_l80+1) begin: l8_gen_0
    full_adder_17 l8 (
      .x(M_l8_x[GEN_l80*(1)+(1)-1-:(1)]),
      .y(M_l8_y[GEN_l80*(1)+(1)-1-:(1)]),
      .cin(M_l8_cin[GEN_l80*(1)+(1)-1-:(1)]),
      .s(M_l8_s[GEN_l80*(1)+(1)-1-:(1)]),
      .c(M_l8_c[GEN_l80*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(3'h7+0)-1:0] M_l9_s;
  wire [(3'h7+0)-1:0] M_l9_c;
  reg [(3'h7+0)-1:0] M_l9_x;
  reg [(3'h7+0)-1:0] M_l9_y;
  reg [(3'h7+0)-1:0] M_l9_cin;
  
  genvar GEN_l90;
  generate
  for (GEN_l90=0;GEN_l90<3'h7;GEN_l90=GEN_l90+1) begin: l9_gen_0
    full_adder_17 l9 (
      .x(M_l9_x[GEN_l90*(1)+(1)-1-:(1)]),
      .y(M_l9_y[GEN_l90*(1)+(1)-1-:(1)]),
      .cin(M_l9_cin[GEN_l90*(1)+(1)-1-:(1)]),
      .s(M_l9_s[GEN_l90*(1)+(1)-1-:(1)]),
      .c(M_l9_c[GEN_l90*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(3'h6+0)-1:0] M_l10_s;
  wire [(3'h6+0)-1:0] M_l10_c;
  reg [(3'h6+0)-1:0] M_l10_x;
  reg [(3'h6+0)-1:0] M_l10_y;
  reg [(3'h6+0)-1:0] M_l10_cin;
  
  genvar GEN_l100;
  generate
  for (GEN_l100=0;GEN_l100<3'h6;GEN_l100=GEN_l100+1) begin: l10_gen_0
    full_adder_17 l10 (
      .x(M_l10_x[GEN_l100*(1)+(1)-1-:(1)]),
      .y(M_l10_y[GEN_l100*(1)+(1)-1-:(1)]),
      .cin(M_l10_cin[GEN_l100*(1)+(1)-1-:(1)]),
      .s(M_l10_s[GEN_l100*(1)+(1)-1-:(1)]),
      .c(M_l10_c[GEN_l100*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(3'h5+0)-1:0] M_l11_s;
  wire [(3'h5+0)-1:0] M_l11_c;
  reg [(3'h5+0)-1:0] M_l11_x;
  reg [(3'h5+0)-1:0] M_l11_y;
  reg [(3'h5+0)-1:0] M_l11_cin;
  
  genvar GEN_l110;
  generate
  for (GEN_l110=0;GEN_l110<3'h5;GEN_l110=GEN_l110+1) begin: l11_gen_0
    full_adder_17 l11 (
      .x(M_l11_x[GEN_l110*(1)+(1)-1-:(1)]),
      .y(M_l11_y[GEN_l110*(1)+(1)-1-:(1)]),
      .cin(M_l11_cin[GEN_l110*(1)+(1)-1-:(1)]),
      .s(M_l11_s[GEN_l110*(1)+(1)-1-:(1)]),
      .c(M_l11_c[GEN_l110*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(3'h4+0)-1:0] M_l12_s;
  wire [(3'h4+0)-1:0] M_l12_c;
  reg [(3'h4+0)-1:0] M_l12_x;
  reg [(3'h4+0)-1:0] M_l12_y;
  reg [(3'h4+0)-1:0] M_l12_cin;
  
  genvar GEN_l120;
  generate
  for (GEN_l120=0;GEN_l120<3'h4;GEN_l120=GEN_l120+1) begin: l12_gen_0
    full_adder_17 l12 (
      .x(M_l12_x[GEN_l120*(1)+(1)-1-:(1)]),
      .y(M_l12_y[GEN_l120*(1)+(1)-1-:(1)]),
      .cin(M_l12_cin[GEN_l120*(1)+(1)-1-:(1)]),
      .s(M_l12_s[GEN_l120*(1)+(1)-1-:(1)]),
      .c(M_l12_c[GEN_l120*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(2'h3+0)-1:0] M_l13_s;
  wire [(2'h3+0)-1:0] M_l13_c;
  reg [(2'h3+0)-1:0] M_l13_x;
  reg [(2'h3+0)-1:0] M_l13_y;
  reg [(2'h3+0)-1:0] M_l13_cin;
  
  genvar GEN_l130;
  generate
  for (GEN_l130=0;GEN_l130<2'h3;GEN_l130=GEN_l130+1) begin: l13_gen_0
    full_adder_17 l13 (
      .x(M_l13_x[GEN_l130*(1)+(1)-1-:(1)]),
      .y(M_l13_y[GEN_l130*(1)+(1)-1-:(1)]),
      .cin(M_l13_cin[GEN_l130*(1)+(1)-1-:(1)]),
      .s(M_l13_s[GEN_l130*(1)+(1)-1-:(1)]),
      .c(M_l13_c[GEN_l130*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [(2'h2+0)-1:0] M_l14_s;
  wire [(2'h2+0)-1:0] M_l14_c;
  reg [(2'h2+0)-1:0] M_l14_x;
  reg [(2'h2+0)-1:0] M_l14_y;
  reg [(2'h2+0)-1:0] M_l14_cin;
  
  genvar GEN_l140;
  generate
  for (GEN_l140=0;GEN_l140<2'h2;GEN_l140=GEN_l140+1) begin: l14_gen_0
    full_adder_17 l14 (
      .x(M_l14_x[GEN_l140*(1)+(1)-1-:(1)]),
      .y(M_l14_y[GEN_l140*(1)+(1)-1-:(1)]),
      .cin(M_l14_cin[GEN_l140*(1)+(1)-1-:(1)]),
      .s(M_l14_s[GEN_l140*(1)+(1)-1-:(1)]),
      .c(M_l14_c[GEN_l140*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  wire [1-1:0] M_l15_s;
  wire [1-1:0] M_l15_c;
  reg [1-1:0] M_l15_x;
  reg [1-1:0] M_l15_y;
  reg [1-1:0] M_l15_cin;
  full_adder_17 l15 (
    .x(M_l15_x),
    .y(M_l15_y),
    .cin(M_l15_cin),
    .s(M_l15_s),
    .c(M_l15_c)
  );
  
  always @* begin
    out = 1'h0;
    p[0+0-:1] = a[0+0-:1] & b[0+0-:1];
    M_h_x[0+0-:1] = a[1+0-:1] & b[0+0-:1];
    M_h_y[0+0-:1] = a[0+0-:1] & b[1+0-:1];
    for (i = 1'h0; i < 4'he; i = i + 1) begin
      M_l2_x[(i)*1+0-:1] = a[(i + 2'h2)*1+0-:1] & b[0+0-:1];
      M_l2_y[(i)*1+0-:1] = a[(i + 1'h1)*1+0-:1] & b[1+0-:1];
      M_l2_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[2+0-:1];
    end
    p[1+0-:1] = M_h_s[0+0-:1];
    M_h_x[1+0-:1] = M_h_c[0+0-:1];
    M_h_y[1+0-:1] = M_l2_s[0+0-:1];
    for (i = 1'h0; i < 4'hd; i = i + 1) begin
      M_l3_x[(i)*1+0-:1] = M_l2_c[(i)*1+0-:1];
      M_l3_y[(i)*1+0-:1] = M_l2_s[(i + 1'h1)*1+0-:1];
      M_l3_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[3+0-:1];
    end
    p[2+0-:1] = M_h_s[1+0-:1];
    M_h_x[2+0-:1] = M_h_c[1+0-:1];
    M_h_y[2+0-:1] = M_l3_s[0+0-:1];
    for (i = 1'h0; i < 4'hc; i = i + 1) begin
      M_l4_x[(i)*1+0-:1] = M_l3_c[(i)*1+0-:1];
      M_l4_y[(i)*1+0-:1] = M_l3_s[(i + 1'h1)*1+0-:1];
      M_l4_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[4+0-:1];
    end
    p[3+0-:1] = M_h_s[2+0-:1];
    M_h_x[3+0-:1] = M_h_c[2+0-:1];
    M_h_y[3+0-:1] = M_l4_s[0+0-:1];
    for (i = 1'h0; i < 4'hb; i = i + 1) begin
      M_l5_x[(i)*1+0-:1] = M_l4_c[(i)*1+0-:1];
      M_l5_y[(i)*1+0-:1] = M_l4_s[(i + 1'h1)*1+0-:1];
      M_l5_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[5+0-:1];
    end
    p[4+0-:1] = M_h_s[3+0-:1];
    M_h_x[4+0-:1] = M_h_c[3+0-:1];
    M_h_y[4+0-:1] = M_l5_s[0+0-:1];
    for (i = 1'h0; i < 4'ha; i = i + 1) begin
      M_l6_x[(i)*1+0-:1] = M_l5_c[(i)*1+0-:1];
      M_l6_y[(i)*1+0-:1] = M_l5_s[(i + 1'h1)*1+0-:1];
      M_l6_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[6+0-:1];
    end
    p[5+0-:1] = M_h_s[4+0-:1];
    M_h_x[5+0-:1] = M_h_c[4+0-:1];
    M_h_y[5+0-:1] = M_l6_s[0+0-:1];
    for (i = 1'h0; i < 4'h9; i = i + 1) begin
      M_l7_x[(i)*1+0-:1] = M_l6_c[(i)*1+0-:1];
      M_l7_y[(i)*1+0-:1] = M_l6_s[(i + 1'h1)*1+0-:1];
      M_l7_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[7+0-:1];
    end
    p[6+0-:1] = M_h_s[5+0-:1];
    M_h_x[6+0-:1] = M_h_c[5+0-:1];
    M_h_y[6+0-:1] = M_l7_s[0+0-:1];
    for (i = 1'h0; i < 4'h8; i = i + 1) begin
      M_l8_x[(i)*1+0-:1] = M_l7_c[(i)*1+0-:1];
      M_l8_y[(i)*1+0-:1] = M_l7_s[(i + 1'h1)*1+0-:1];
      M_l8_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[8+0-:1];
    end
    p[7+0-:1] = M_h_s[6+0-:1];
    M_h_x[7+0-:1] = M_h_c[6+0-:1];
    M_h_y[7+0-:1] = M_l8_s[0+0-:1];
    for (i = 1'h0; i < 3'h7; i = i + 1) begin
      M_l9_x[(i)*1+0-:1] = M_l8_c[(i)*1+0-:1];
      M_l9_y[(i)*1+0-:1] = M_l8_s[(i + 1'h1)*1+0-:1];
      M_l9_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[9+0-:1];
    end
    p[8+0-:1] = M_h_s[7+0-:1];
    M_h_x[8+0-:1] = M_h_c[7+0-:1];
    M_h_y[8+0-:1] = M_l9_s[0+0-:1];
    for (i = 1'h0; i < 3'h6; i = i + 1) begin
      M_l10_x[(i)*1+0-:1] = M_l9_c[(i)*1+0-:1];
      M_l10_y[(i)*1+0-:1] = M_l9_s[(i + 1'h1)*1+0-:1];
      M_l10_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[10+0-:1];
    end
    p[9+0-:1] = M_h_s[8+0-:1];
    M_h_x[9+0-:1] = M_h_c[8+0-:1];
    M_h_y[9+0-:1] = M_l10_s[0+0-:1];
    for (i = 1'h0; i < 3'h5; i = i + 1) begin
      M_l11_x[(i)*1+0-:1] = M_l10_c[(i)*1+0-:1];
      M_l11_y[(i)*1+0-:1] = M_l10_s[(i + 1'h1)*1+0-:1];
      M_l11_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[11+0-:1];
    end
    p[10+0-:1] = M_h_s[9+0-:1];
    M_h_x[10+0-:1] = M_h_c[9+0-:1];
    M_h_y[10+0-:1] = M_l11_s[0+0-:1];
    for (i = 1'h0; i < 3'h4; i = i + 1) begin
      M_l12_x[(i)*1+0-:1] = M_l11_c[(i)*1+0-:1];
      M_l12_y[(i)*1+0-:1] = M_l11_s[(i + 1'h1)*1+0-:1];
      M_l12_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[12+0-:1];
    end
    p[11+0-:1] = M_h_s[10+0-:1];
    M_h_x[11+0-:1] = M_h_c[10+0-:1];
    M_h_y[11+0-:1] = M_l12_s[0+0-:1];
    for (i = 1'h0; i < 2'h3; i = i + 1) begin
      M_l13_x[(i)*1+0-:1] = M_l12_c[(i)*1+0-:1];
      M_l13_y[(i)*1+0-:1] = M_l12_s[(i + 1'h1)*1+0-:1];
      M_l13_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[13+0-:1];
    end
    p[12+0-:1] = M_h_s[11+0-:1];
    M_h_x[12+0-:1] = M_h_c[11+0-:1];
    M_h_y[12+0-:1] = M_l13_s[0+0-:1];
    for (i = 1'h0; i < 2'h2; i = i + 1) begin
      M_l14_x[(i)*1+0-:1] = M_l13_c[(i)*1+0-:1];
      M_l14_y[(i)*1+0-:1] = M_l13_s[(i + 1'h1)*1+0-:1];
      M_l14_cin[(i)*1+0-:1] = a[(i)*1+0-:1] & b[14+0-:1];
    end
    p[13+0-:1] = M_h_s[12+0-:1];
    M_h_x[13+0-:1] = M_h_c[12+0-:1];
    M_h_y[13+0-:1] = M_l14_s[0+0-:1];
    M_l15_x = M_l14_c[0+0-:1];
    M_l15_y = M_l14_s[1+0-:1];
    M_l15_cin = a[0+0-:1] & b[15+0-:1];
    p[14+0-:1] = M_h_s[13+0-:1];
    M_h_x[14+0-:1] = M_h_c[13+0-:1];
    M_h_y[14+0-:1] = M_l15_s;
    p[15+0-:1] = M_h_s[14+0-:1];
    out = p;
  end
endmodule
